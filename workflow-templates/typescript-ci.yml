name: Typescript CI

on:
  pull_request:
    branches: [ master ]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        always-auth: true
        registry-url: https://npm.pkg.github.com
        scope: '@lojaintegrada'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: npm ci
      env:
        NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

  lint:
    runs-on: ubuntu-latest

    needs: install-dependencies

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        always-auth: true
        registry-url: https://npm.pkg.github.com
        scope: '@lojaintegrada'
      env:
        NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: npm run lint

  test:
    runs-on: ubuntu-latest

    needs: install-dependencies

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        always-auth: true
        registry-url: https://npm.pkg.github.com
        scope: '@lojaintegrada'
      env:
        NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: npm test

  build:
    runs-on: ubuntu-latest

    needs: install-dependencies

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        always-auth: true
        registry-url: https://npm.pkg.github.com
        scope: '@lojaintegrada'
      env:
        NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
    - name: Load node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: npm run build

  notify-slack:
    needs: build
    name: Slack Notification
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: li-k8s-notifications
          SLACK_USERNAME: ${{ github.event.repository.name }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://lojaintegrada.com.br/site/wp-content/uploads/2018/08/cropped-logo-192x192.png
          SLACK_COLOR: ${{ job.status }}
          SLACK_FOOTER: ''
